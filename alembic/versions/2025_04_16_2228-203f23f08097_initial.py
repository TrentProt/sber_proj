"""initial

Revision ID: 203f23f08097
Revises: 
Create Date: 2025-04-16 22:28:43.787706

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '203f23f08097'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rewards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(length=50), nullable=False),
    sa.Column('image_url', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('topics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('time_test', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tests_title'), 'tests', ['title'], unique=False)
    op.create_index(op.f('ix_tests_topic_id'), 'tests', ['topic_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reward_id', sa.Integer(), nullable=True),
    sa.Column('number', sa.String(length=12), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['reward_id'], ['rewards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_number'), 'users', ['number'], unique=True)
    op.create_index(op.f('ix_users_password'), 'users', ['password'], unique=False)
    op.create_table('profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=True),
    sa.Column('last_name', sa.String(length=30), nullable=True),
    sa.Column('middle_name', sa.String(length=30), nullable=True),
    sa.Column('bio', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('question_text')
    )
    op.create_index(op.f('ix_questions_test_id'), 'questions', ['test_id'], unique=False)
    op.create_table('user_attempts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('count_correct_answer', sa.Integer(), nullable=False),
    sa.Column('total_questions', sa.Integer(), nullable=False),
    sa.Column('time_execution', sa.Time(), nullable=False),
    sa.Column('complete_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_attempts_complete_at'), 'user_attempts', ['complete_at'], unique=False)
    op.create_index(op.f('ix_user_attempts_test_id'), 'user_attempts', ['test_id'], unique=False)
    op.create_index(op.f('ix_user_attempts_user_id'), 'user_attempts', ['user_id'], unique=False)
    op.create_table('answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer_text', sa.String(length=255), nullable=False),
    sa.Column('correct', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_answers_correct'), 'answers', ['correct'], unique=False)
    op.create_index(op.f('ix_answers_question_id'), 'answers', ['question_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_answers_question_id'), table_name='answers')
    op.drop_index(op.f('ix_answers_correct'), table_name='answers')
    op.drop_table('answers')
    op.drop_index(op.f('ix_user_attempts_user_id'), table_name='user_attempts')
    op.drop_index(op.f('ix_user_attempts_test_id'), table_name='user_attempts')
    op.drop_index(op.f('ix_user_attempts_complete_at'), table_name='user_attempts')
    op.drop_table('user_attempts')
    op.drop_index(op.f('ix_questions_test_id'), table_name='questions')
    op.drop_table('questions')
    op.drop_table('profiles')
    op.drop_index(op.f('ix_users_password'), table_name='users')
    op.drop_index(op.f('ix_users_number'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tests_topic_id'), table_name='tests')
    op.drop_index(op.f('ix_tests_title'), table_name='tests')
    op.drop_table('tests')
    op.drop_table('topics')
    op.drop_table('rewards')
    # ### end Alembic commands ###
