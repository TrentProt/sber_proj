"""update

Revision ID: d3d642335417
Revises: 0297990480ee
Create Date: 2025-05-11 00:10:10.029634

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd3d642335417'
down_revision: Union[str, None] = '0297990480ee'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tests', sa.Column('type_test', sa.String(length=20), nullable=True))

    # Изменение типа time_execution с преобразованием данных
    op.alter_column('user_attempts', 'time_execution',
                    existing_type=postgresql.TIME(),
                    type_=sa.Integer(),
                    postgresql_using='EXTRACT(HOUR FROM time_execution) * 3600 + '
                                     'EXTRACT(MINUTE FROM time_execution) * 60 + '
                                     'EXTRACT(SECOND FROM time_execution)',
                    nullable=True)

    op.drop_constraint('user_attempts_user_id_test_id_type_test_key', 'user_attempts', type_='unique')
    op.drop_column('user_attempts', 'type_test')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_attempts', sa.Column('type_test', sa.VARCHAR(length=20), autoincrement=False, nullable=True))

    # Возвращение исходного типа с преобразованием секунд обратно в TIME
    op.alter_column('user_attempts', 'time_execution',
                    existing_type=sa.Integer(),
                    type_=postgresql.TIME(),
                    postgresql_using='(time \'00:00:00\' + time_execution * INTERVAL \'1 second\')::time',
                    nullable=False)

    op.create_unique_constraint('user_attempts_user_id_test_id_type_test_key', 'user_attempts',
                                ['user_id', 'test_id', 'type_test'])
    op.drop_column('tests', 'type_test')
    # ### end Alembic commands ###
